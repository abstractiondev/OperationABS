// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace OperationABS.Operation
{
    using System;
    using System.IO;
    using System.Xml;
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Linq;
    using System.Xml.Linq;
    using System.Collections;
    using System.Collections.Generic;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class CSharpCode_v1_0 : CSharpCode_v1_0Base
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(" \r\n");
            this.Write("\r\n");
            
            #line 18 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
   
	// TransformGenerator<OperationAbstractionType>(GenerateRoot, ".designer.cs");	
	GenerateOperationAbstraction(CurrentAbstraction);

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        private global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost hostValue;
        /// <summary>
        /// The current host for the text templating engine
        /// </summary>
        public virtual global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost Host
        {
            get
            {
                return this.hostValue;
            }
            set
            {
                this.hostValue = value;
            }
        }
        
        #line 22 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
 

	public Tuple<string, string>[] GetGeneratorContent(params string[] xmlFileNames)
	{
		List<Tuple<string, string>> result = new List<Tuple<string, string>>();
		foreach(string xmlFileName in xmlFileNames)
		{
			OperationAbstractionType abs = LoadXml<OperationAbstractionType>(xmlFileName);
			CurrentAbstraction = abs;
			this.GenerationEnvironment.Clear();
			string content = TransformText();
			string outputFile = Path.GetFileNameWithoutExtension(xmlFileName) + ".designer.cs";
			result.Add(Tuple.Create(outputFile, content));
		}
		return result.ToArray();
	}

	
	void GenerateRoot()
	{
		//GenerateOperationAbstraction(CurrentAbstraction);
	}
	
	
	OperationAbstractionType CurrentAbstraction;
	
	void SetCurrentAbstraction(object abs)
	{
		CurrentAbstraction = (OperationAbstractionType) abs;
	}
	
	void GenerateOperationAbstraction(OperationAbstractionType abstraction)
	{
		
        
        #line default
        #line hidden
        
        #line 55 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("using System;\r\nusing System.Collections.Specialized;\r\nusing System.Collections.Ge" +
        "neric;\r\nusing System.Drawing;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\n" +
        "\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 63 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		foreach(OperationsType operations in abstraction.Operations ?? new OperationsType[0]) {
			BeginNamespace(operations.codeNamespace);
			foreach(var operation in operations.Operation ?? new OperationType[0])
				GenerateOperation(operation);
			EndBlock();
		}
	}

	#region Class Level Variable Block
	
	//CQRS_v1_0.DomainType CurrentDomain;
	
	OperationType CurrOperation;
	
	void GenerateOperation(OperationType operation)
	{
		CurrOperation = operation;
		string operationName = operation.name;
		string parameterClassName = operationName + "Parameters";
		string returnValueClassName = GetReturnValueClassName(operationName);
		if(operation.Parameters != null)
			GenerateVariableClassDefinition(parameterClassName, operation.Parameters.Parameter);
		
        
        #line default
        #line hidden
        
        #line 86 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\r\n\t\tpublic class ");

        
        #line default
        #line hidden
        
        #line 88 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operationName));

        
        #line default
        #line hidden
        
        #line 88 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" \r\n\t\t{\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 90 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"


		GenerateParameterPreparation(parameterClassName, operation.Parameters);
		GenerateInternalReturnValueClasses(operation.Execution?.SequentialExecution);
		GenerateExecution(operation);
		
        
        #line default
        #line hidden
        
        #line 95 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t}\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 97 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		if(operation.OperationReturnValues != null)
			GenerateVariableClassDefinition(returnValueClassName, operation.OperationReturnValues.ReturnValue);

	}

	void GenerateReturnValue(OperationReturnValuesType returnValues)
	{
		if(returnValues == null)
			return;
		string allParameters = GetParametersAndTargetsAsAllParams("parameters.",
			returnValues.Parameter, returnValues.Target);
		string returnValueClassName = GetReturnValueClassName(CurrOperation.name);
		string execName = GetPrefixedMethodName("Get_ReturnValue");
		
        
        #line default
        #line hidden
        
        #line 111 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(returnValueClassName));

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" returnValue = ");

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(execName));

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(allParameters));

        
        #line default
        #line hidden
        
        #line 112 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\r\n\t\treturn returnValue;\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 114 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}

	bool isAnyItemAsyncModeSupporting(object [] executionItems, MethodExecuteTypeAsyncSupportMode asyncSupportMode)
    {
		OperationExecuteType[] operationExecs = executionItems.Where(item => item is OperationExecuteType).Cast<OperationExecuteType>().ToArray();
		MethodExecuteType[] methodExecs = executionItems.Where(item => item is MethodExecuteType).Cast<MethodExecuteType>().ToArray();
		TargetDefinitionType[] targetDefs = executionItems.Where(item => item is TargetDefinitionType).Cast<TargetDefinitionType>().ToArray();

		return operationExecs.Any(item => item.asyncSupportMode == asyncSupportMode) 
			|| methodExecs.Any(item => item.asyncSupportMode == asyncSupportMode) 
			|| targetDefs.Any(item => item.asyncSupportMode == asyncSupportMode);
    }

	void GenerateInternalReturnValueClasses(object[] executionItems)
	{
		foreach(object executionItem in executionItems ?? new object[0])
			GenerateReturnValueClassDefinition(executionItem);
	}
	
	void GenerateReturnValueClassDefinition(object executionItem)
	{
		OperationExecuteType operationExec = executionItem as OperationExecuteType;
		MethodExecuteType methodExec = executionItem as MethodExecuteType;
		TargetDefinitionType targetDef = executionItem as TargetDefinitionType;
		if(operationExec != null) {
			GenerateReturnValueClassDefinition(operationExec.name, operationExec.ReturnValue, false);
		}
		else if(methodExec != null)
			GenerateReturnValueClassDefinition(methodExec.name, methodExec.ReturnValue, false);
		else if(targetDef != null) {
		} else
			throw new NotSupportedException("Execution item type: " + executionItem.GetType().Name);
	}
	
	
	string[] GetParameterArray(string prefix, TargetType[] targets)
	{
		if(targets == null)
			return new string[0];
		string[] result = targets.Select(target => prefix + target.name).ToArray();
		return result;
	}
	
	string GetParametersAndTargetsAsAllParams(string paramPrefix, TargetType[] parameters,
		TargetType[] targets)
	{
		string[] parameterParameters = GetParameterArray(paramPrefix, parameters);
		string[] targetParameters = GetParameterArray("", targets);
		string allParameters = String.Join(", ", parameterParameters.Union(targetParameters).ToArray());
		return allParameters;
	}
	
	bool HasReturnValue(OperationType operation)
	{
		return operation.OperationReturnValues != null;
	}
	
	bool HasParameters(OperationType operation)
	{
		return operation.Parameters != null;
	}
	
	string GetReturnValueType(string returnValueOwner, VariableType[] returnValues, bool isOperation)
	{
		if(returnValues == null)
			return "void";
		if(returnValues.Length == 1 && isOperation == false)
			return returnValues[0].dataType;
		return GetReturnValueClassName(returnValueOwner);
	}
	
	string GetReturnValueClassName(string returnValueOwner)
	{
		return returnValueOwner + "ReturnValue";
	}
	
	string GetExecutionOutputName(string returnValueOwner)
	{
		return returnValueOwner + "Output";
	}
	
	void GenerateReturnValueClassDefinition(string returnValueOwner, VariableType[] returnValues, bool isOperation)
	{
		if(returnValues == null || (returnValues.Length < 2 && isOperation == false))
			return;
		string returnValueClassName = GetReturnValueClassName(returnValueOwner);
		GenerateVariableClassDefinition(returnValueClassName, returnValues);
	}
	
	string GetPrefixedMethodName(string methodName)
	{
		string implementationClassMethodName = CurrOperation.name + "Implementation." + methodName;
		return implementationClassMethodName;
	}
	
	void GenerateOperationExecuteItem(OperationExecuteType operationExec, bool asyncVersion = false)
	{
		asyncVersion = asyncVersion && operationExec.asyncSupportMode != MethodExecuteTypeAsyncSupportMode.SyncOnly;
		string allParameters = GetParametersAndTargetsAsAllParams("parameters.",
			operationExec.Parameter, operationExec.Target);
		string returnValueType = GetReturnValueType(operationExec.name, operationExec.ReturnValue, false);
		string executionOutputName = GetExecutionOutputName(operationExec.name);
		string returnValueDefinitionString = operationExec.ReturnValue != null ?
			returnValueType + " " + executionOutputName + ";" : "";
		string targetOperationName = operationExec.targetOperationName;
		OperationType targetOperation = GetOperation(targetOperationName);
		string targetOperationParametersName = targetOperation.name + "Parameters";
		string targetOperationParameterCall = "";
		string targetOperationReturnValueAssignment = "";
		string getOutputParameters = "";
		if(HasReturnValue(targetOperation))
		{
			targetOperationReturnValueAssignment = "var operationReturnValue = ";
			string[] outputParameterArray = allParameters.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries).Select(str => str.Trim()).ToArray();
			outputParameterArray = (new string[] { "operationReturnValue" }).Union(outputParameterArray).ToArray();
			getOutputParameters = String.Join(", ", outputParameterArray);
		} else
		{
			getOutputParameters = allParameters;
		}
		string operationCallParameters = "";
		string execName = GetPrefixedMethodName(operationExec.name);
		if(HasParameters(targetOperation))
		{
			targetOperationParameterCall = targetOperationParametersName + 
				" operationParameters = " + execName + "_GetParameters(" + allParameters + ");";
			operationCallParameters = "operationParameters";
		} 
		string returnValueAssignmentString = operationExec.ReturnValue != null ? 
			executionOutputName + " = " + execName + "_GetOutput(" + getOutputParameters + ");" : "";
		string asyncNameSuffix = asyncVersion ? "Async" : "";
		string awaitPrefix = asyncVersion ? " await ": "";
		
        
        #line default
        #line hidden
        
        #line 247 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 248 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(returnValueDefinitionString));

        
        #line default
        #line hidden
        
        #line 248 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\r\n\t\t{ // Local block to allow local naming\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 250 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(targetOperationParameterCall));

        
        #line default
        #line hidden
        
        #line 250 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(targetOperationReturnValueAssignment));

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(awaitPrefix));

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(targetOperationName));

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(".Execute");

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(asyncNameSuffix));

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operationCallParameters));

        
        #line default
        #line hidden
        
        #line 251 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 252 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(returnValueAssignmentString));

        
        #line default
        #line hidden
        
        #line 252 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t\t\t\t\t\r\n\t\t} // Local block closing\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 254 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"


	}
	
	void GenerateMethodExecuteItem(MethodExecuteType methodExec, bool asyncVersion = false)
	{
		asyncVersion = asyncVersion && methodExec.asyncSupportMode != MethodExecuteTypeAsyncSupportMode.SyncOnly;
		string allParameters = GetParametersAndTargetsAsAllParams("parameters.",
			methodExec.Parameter, methodExec.Target);
		string returnValueType = GetReturnValueType(methodExec.name, methodExec.ReturnValue, false);
		string executionOutputName = GetExecutionOutputName(methodExec.name);
		string returnValueOutputString = methodExec.ReturnValue != null ? 
			returnValueType + " " + executionOutputName + " = " : "";
		string execName = GetPrefixedMethodName("ExecuteMethod_" + methodExec.name);
		string asyncNameSuffix = asyncVersion ? "Async" : "";
		string awaitPrefix = asyncVersion ? " await ": "";
		
        
        #line default
        #line hidden
        
        #line 270 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(returnValueOutputString));

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(awaitPrefix));

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(execName));

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(asyncNameSuffix));

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(allParameters));

        
        #line default
        #line hidden
        
        #line 271 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\t\t\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 272 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	void GenerateTargetDefinitionItem(TargetDefinitionType targetDef, bool asyncVersion = false)
	{
		if(targetDef.name == null)
			throw new ArgumentNullException("targetDef.name", "Target name must be given");
		asyncVersion = asyncVersion && targetDef.asyncSupportMode != MethodExecuteTypeAsyncSupportMode.SyncOnly;
		string allParameters = GetParametersAndTargetsAsAllParams("parameters.",
			targetDef.Parameter, targetDef.Target);
		string execName = GetPrefixedMethodName("GetTarget_" + targetDef.name);
		string asyncNameSuffix = asyncVersion ? "Async" : "";
		string awaitPrefix = asyncVersion ? " await ": "";
		
        
        #line default
        #line hidden
        
        #line 285 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(targetDef.dataType));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(targetDef.name));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(awaitPrefix));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(execName));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(asyncNameSuffix));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(allParameters));

        
        #line default
        #line hidden
        
        #line 286 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\t\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 287 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	void GenerateExecutionItem(object executionItem, bool asyncVersion = false)
	{
		OperationExecuteType operationExec = executionItem as OperationExecuteType;
		MethodExecuteType methodExec = executionItem as MethodExecuteType;
		TargetDefinitionType targetDef = executionItem as TargetDefinitionType;
		if(operationExec != null)
			GenerateOperationExecuteItem(operationExec, asyncVersion);
		else if(methodExec != null)
			GenerateMethodExecuteItem(methodExec, asyncVersion);
		else if(targetDef != null)
			GenerateTargetDefinitionItem(targetDef, asyncVersion);
		else
			throw new NotSupportedException("Execution item type: " + executionItem.GetType().Name);
	}
	
	void GenerateExecution(OperationType operation)
	{
		if(operation.Execution?.SequentialExecution == null)
			return;
		string operationName = operation.name;
		string parametersCallingString = operation.Parameters != null ?  operationName + "Parameters parameters" : "";
		string resultsTypeNameString = operation.OperationReturnValues != null ? operationName + "ReturnValue" : "void";
		string parameterPreparationCallString = operation.Parameters != null ? "PrepareParameters(parameters);" : ""; 
		bool supportsAsync = isAnyItemAsyncModeSupporting(operation.Execution.SequentialExecution, MethodExecuteTypeAsyncSupportMode.AsyncOnly) ||
			isAnyItemAsyncModeSupporting(operation.Execution.SequentialExecution, MethodExecuteTypeAsyncSupportMode.Both);
		bool supportsOnlyAsync = isAnyItemAsyncModeSupporting(operation.Execution.SequentialExecution, MethodExecuteTypeAsyncSupportMode.AsyncOnly);
		bool supportsSync = isAnyItemAsyncModeSupporting(operation.Execution.SequentialExecution, MethodExecuteTypeAsyncSupportMode.SyncOnly) ||
			isAnyItemAsyncModeSupporting(operation.Execution.SequentialExecution, MethodExecuteTypeAsyncSupportMode.Both);
		supportsSync = supportsSync && !supportsOnlyAsync;			
		if(supportsSync) {
		
        
        #line default
        #line hidden
        
        #line 320 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\tpublic static ");

        
        #line default
        #line hidden
        
        #line 321 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(resultsTypeNameString));

        
        #line default
        #line hidden
        
        #line 321 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" Execute(");

        
        #line default
        #line hidden
        
        #line 321 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parametersCallingString));

        
        #line default
        #line hidden
        
        #line 321 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 323 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
 GeneratePerformanceRequirementInitialization(GetPerformanceRequirements(operation)); 
        
        #line default
        #line hidden
        
        #line 323 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t\t");

        
        #line default
        #line hidden
        
        #line 324 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parameterPreparationCallString));

        
        #line default
        #line hidden
        
        #line 324 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 325 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

			foreach(object executionItem in operation.Execution.SequentialExecution)
			{
				GenerateExecutionItem(executionItem);
			}
			GeneratePerformanceRequirementAssertion(GetPerformanceRequirements(operation));
			GenerateReturnValue(operation.OperationReturnValues);
			
        
        #line default
        #line hidden
        
        #line 332 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t}\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 334 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		}
		if(supportsAsync) {
			string awaitableReturnValue = resultsTypeNameString == "void" ? "Task" : "Task<" + resultsTypeNameString + ">";
		
        
        #line default
        #line hidden
        
        #line 338 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\tpublic static async ");

        
        #line default
        #line hidden
        
        #line 339 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(awaitableReturnValue));

        
        #line default
        #line hidden
        
        #line 339 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ExecuteAsync(");

        
        #line default
        #line hidden
        
        #line 339 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parametersCallingString));

        
        #line default
        #line hidden
        
        #line 339 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 341 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
 GeneratePerformanceRequirementInitialization(GetPerformanceRequirements(operation)); 
        
        #line default
        #line hidden
        
        #line 341 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t\t");

        
        #line default
        #line hidden
        
        #line 342 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parameterPreparationCallString));

        
        #line default
        #line hidden
        
        #line 342 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 343 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

			foreach(object executionItem in operation.Execution.SequentialExecution)
			{
				GenerateExecutionItem(executionItem, true);
			}
			GeneratePerformanceRequirementAssertion(GetPerformanceRequirements(operation));
			GenerateReturnValue(operation.OperationReturnValues);
			
        
        #line default
        #line hidden
        
        #line 350 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t}\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 352 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

        }
	}

	RequirementType[] GetPerformanceRequirements(OperationType operation)
	{
		if(operation.OperationSpec == null || operation.OperationSpec.Requirements == null)
			return null;
		RequirementType[] performanceRequirements = operation.OperationSpec.Requirements.Where(req => req.Item is RequirementTypePerformance).ToArray();
		RequirementType invalidCheck = performanceRequirements.FirstOrDefault(req => req.category != RequirementTypeCategory.Performance);
		if(invalidCheck != null)
			throw new ArgumentException("Performance requirement in wrong category: " + invalidCheck.name + " category " + invalidCheck.category.ToString());
		return performanceRequirements;
	}
	
	void GeneratePerformanceRequirementInitialization(RequirementType[] performanceReqs)
	{
		if(performanceReqs == null)
			return;
		foreach(RequirementType req in performanceReqs)
			GeneratePerfReqInit(req.name, req.Item as RequirementTypePerformance);
	}
	
	void GeneratePerfReqInit(string reqName, RequirementTypePerformance perfReq)
	{
		if(perfReq.maxCPUTimeMsSpecified || perfReq.maxFileIOBytesSpecified || perfReq.maxFileIOCountSpecified || perfReq.maxFileIOTimeMsSpecified 
			|| perfReq.maxMemoryBytesSpecified)
			throw new NotSupportedException("Only TotalMSTime is supported as performance requirement for now");
		if(perfReq.maxTotalTimeMsSpecified) 
		{
		
        
        #line default
        #line hidden
        
        #line 382 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t        DateTime perfMonitorTotalTimeMs_");

        
        #line default
        #line hidden
        
        #line 383 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 383 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("_Start = DateTime.Now;\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 384 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		}
	}
	
	void GeneratePerfReqAssert(string reqName, RequirementTypePerformance perfReq)
	{
		if(perfReq.maxCPUTimeMsSpecified || perfReq.maxFileIOBytesSpecified || perfReq.maxFileIOCountSpecified || perfReq.maxFileIOTimeMsSpecified 
			|| perfReq.maxMemoryBytesSpecified)
			throw new NotSupportedException("Only TotalMSTime is supported as performance requirement for now");
		if(perfReq.maxTotalTimeMsSpecified) 
		{
		
        
        #line default
        #line hidden
        
        #line 395 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t\t// TODO: Add diagnostic message in addition to brute exception (at least as an" +
        " option)\r\n\t\t\tTimeSpan TotalTimeMs_");

        
        #line default
        #line hidden
        
        #line 397 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 397 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("_duration = DateTime.Now - perfMonitorTotalTimeMs_");

        
        #line default
        #line hidden
        
        #line 397 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 397 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("_Start;\r\n            if(TotalTimeMs_");

        
        #line default
        #line hidden
        
        #line 398 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 398 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("_duration.TotalMilliseconds > ");

        
        #line default
        #line hidden
        
        #line 398 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(perfReq.maxTotalTimeMs));

        
        #line default
        #line hidden
        
        #line 398 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(")\r\n            {\r\n                throw new TimeoutException(String.Format(\"Perfo" +
        "rmance not withing requirement: ");

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" requires ");

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(perfReq.maxTotalTimeMs));

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ms, it took {0} ms\", TotalTimeMs_");

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(reqName));

        
        #line default
        #line hidden
        
        #line 400 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("_duration.TotalMilliseconds));\r\n            }\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 402 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		}
	}
	
	void GeneratePerformanceRequirementAssertion(RequirementType[] performanceReqs)
	{
		if(performanceReqs == null)
			return;
		foreach(RequirementType req in performanceReqs)
			GeneratePerfReqAssert(req.name, req.Item as RequirementTypePerformance);
	}
	
	string GetCallingTargetsParameterString(TargetType[] targets, string emptyParameterResult,
		string prefixText = "")
	{
		if(targets == null || targets.Length == 0)
			return emptyParameterResult;
		string[] targetNames = targets.Select(target => prefixText + target.name).ToArray();
		return String.Join(", ", targetNames);
	}
	
	void GenerateValidationItem(ValidationType validationItem)
	{
		string validationMethodName = "ParameterValidation_" + validationItem.name + "_ThrowsException";
		validationMethodName = GetPrefixedMethodName(validationMethodName);
		string callingParametersString = GetCallingTargetsParameterString(validationItem.Target, "parameters", "parameters.");
		
        
        #line default
        #line hidden
        
        #line 428 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 429 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(validationMethodName));

        
        #line default
        #line hidden
        
        #line 429 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 429 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(callingParametersString));

        
        #line default
        #line hidden
        
        #line 429 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 430 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	OperationType GetOperation(string operationName, bool requireExisting = true)
	{
		OperationType operation =
			CurrentAbstraction.Operations.SelectMany(opers => opers.Operation).FirstOrDefault(item => item.name == operationName);
		if(requireExisting && operation == null)
			throw new ArgumentException("Operation not found with requested name: " + operationName, "operationName");
		return operation;
	}
	
	VariableType[] GetReturnValues(string operationName)
	{
		OperationType operation = GetOperation(operationName);
		if(operation.OperationReturnValues == null)
			return null;
		return operation.OperationReturnValues.ReturnValue;
	}
	
	void GenerateModificationItem(ModificationType modificationItem)
	{
		string modificationMethodName = "ParameterModification_" + modificationItem.name;
		modificationMethodName = GetPrefixedMethodName(modificationMethodName);
		string callingParametersString = GetCallingTargetsParameterString(modificationItem.Target, "parameters", "ref parameters.");
		
        
        #line default
        #line hidden
        
        #line 455 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 456 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(modificationMethodName));

        
        #line default
        #line hidden
        
        #line 456 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 456 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(callingParametersString));

        
        #line default
        #line hidden
        
        #line 456 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(");\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 457 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		
	}

	void GeneratePreparingItem(object preparingItem)
	{
		if(preparingItem == null)
			throw new ArgumentNullException("preparingItem");
		ValidationType validationItem = preparingItem as ValidationType;
		ModificationType modificationItem = preparingItem as ModificationType;
		if(validationItem != null)
			GenerateValidationItem(validationItem);
		else if(modificationItem != null)
			GenerateModificationItem(modificationItem);
		else 
			throw new NotSupportedException("Preparing item type: " + preparingItem.GetType().Name);
	}
	
	void GenerateParameterPreparation(string parameterClassName, ParametersType parameters)
	{
		if(parameters == null)
			return;
		
        
        #line default
        #line hidden
        
        #line 479 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\tprivate static void PrepareParameters(");

        
        #line default
        #line hidden
        
        #line 480 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parameterClassName));

        
        #line default
        #line hidden
        
        #line 480 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" parameters)\r\n\t\t{\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 482 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

			foreach(object preparingItem in parameters.Items ?? new object[0])
				GeneratePreparingItem(preparingItem);
			
        
        #line default
        #line hidden
        
        #line 485 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t}\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 487 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	void GenerateVariableDefinition(VariableType variableDef, string accessModifier, string initialAssignment)
	{
		GenerateVariableDefinition(variableDef.dataType, variableDef.name, accessModifier, initialAssignment);
	}
	
	void GenerateVariableDefinition(string dataType, string name, string accessModifier, string initialAssignment)
	{
		if(dataType == null)
			throw new ArgumentNullException("dataType");
		if(name == null)
			throw new ArgumentNullException("name");
		string accessString = accessModifier ?? "";
		string initialAssignmentString = initialAssignment != null ? " = " + initialAssignment : "";
		
        
        #line default
        #line hidden
        
        #line 503 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(accessString));

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(dataType));

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(name));

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(initialAssignmentString));

        
        #line default
        #line hidden
        
        #line 504 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(";\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 505 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	void GenerateVariableClassDefinition(string className, VariableType[] variables)
	{
		if(className == null)
			throw new ArgumentNullException("className");
		if(variables == null)
			throw new ArgumentNullException("variables");
		
        
        #line default
        #line hidden
        
        #line 514 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\tpublic class ");

        
        #line default
        #line hidden
        
        #line 515 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 515 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write(" \r\n\t\t{\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 517 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

		foreach(var variable in variables)
			GenerateVariableDefinition(variable, "public", null);
		
        
        #line default
        #line hidden
        
        #line 520 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"
this.Write("\t\t}\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 522 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\CSharpCode_v1_0.tt"

	}
	
	void GenerateParameterDefinition(string operationName, ParametersType parameters)
	{
		if(parameters == null || parameters.Parameter == null || parameters.Parameter.Length == 0)
			return;
		string parameterClassName = operationName + "Parameters";
		GenerateVariableClassDefinition(parameterClassName, parameters.Parameter);
	}
	
	#endregion

        
        #line default
        #line hidden
        
        #line 2 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
 
	enum AbstractionShareLevel
	{
		Local,
		Shared,
		Modular,
	}
	
	bool IsLocal
	{
		get {
			return ShareLevel == AbstractionOptions.GeneralTypeShareLevel.Local;
		}
	}
	
	AbstractionOptions.AbstractionOptionsType CurrentOptions;
	AbstractionOptions.GeneralTypeShareLevel ShareLevel {
		get {
			return CurrentOptions.General.shareLevel;
		}
	}
	
	void TransformGenerator<AbstractionType>(Action rootLevelGenerator, string sharedSingleFileExtension)
	{
		// Abstraction(s) that are supposed to be shared must be shared by default.
		// This is simply because any change to "shared" makes it modified compared to the shared version.
		// Thus making abstraction "local" allows also making the changes that make it behave like "local".
		// To make the abstraction "local" make following changes:
		// 1. Modify the output - directive right on top of the file (2nd line) from "?" to ".designer.cs"
		// 2. Set the AbstractionShareLevel below to Shared 
		// 3. After the changes, the abstraction starts to generate its output right below the template:
		// - Change the .cs file properties so that it doesn't compile in the abstraction-project
		// - Link the output .cs file to appropriate projects (to replace the links from AbstractionContent/Out directory)
		// 4. If necessary, copy over and alter the include-files specified for common includes
		
		// ShareLevel = AbstractionShareLevel.Shared;
		
		string templateDirectoryPath = Path.GetDirectoryName(Host.TemplateFile);
		DirectoryInfo dirInfo = new DirectoryInfo(templateDirectoryPath);
		dirInfo = dirInfo.Parent;
		string optionsFile = Path.Combine(dirInfo.FullName, "Options.xml");
		CurrentOptions = LoadXml<AbstractionOptions.AbstractionOptionsType>(optionsFile);

		if(ShareLevel != AbstractionOptions.GeneralTypeShareLevel.Modular)
		{
			string directoryName = GetContentDirectoryFromTemplateFullPath(Host.TemplateFile, IsLocal == false);
			string[] xmlFileNames = Directory.GetFiles(directoryName, "*.xml");
			
			foreach(string xmlFileName in xmlFileNames)
			{
				AbstractionType current = LoadXml<AbstractionType>(xmlFileName);
				SetCurrentAbstraction(current);
				rootLevelGenerator();
			}
		} 
		else
		{
			rootLevelGenerator();
		}
		
		if(ShareLevel == AbstractionOptions.GeneralTypeShareLevel.Shared)
		{
			WriteContentToSingleOutput(Host.TemplateFile, sharedSingleFileExtension);
		}
	}
	
	
	string GetContentDirectoryFromTemplateFullPath(string templateFullPath, bool isShared)
	{
		string templateDirectoryName = Path.GetDirectoryName(templateFullPath);
		string contentDir =  isShared ? @"In\Content_v1_0" : "Content_v1_0";
		string directoryName = Path.Combine(templateDirectoryName, contentDir);
		if(isShared) {
			System.IO.DirectoryInfo absRootDirInfo = new System.IO.DirectoryInfo(templateDirectoryName);
			absRootDirInfo = absRootDirInfo.Parent;
			string abstractionName = absRootDirInfo.Name;
			directoryName = directoryName.Replace(abstractionName, "AbstractionContent");
		}
		return directoryName;
	}
	
	void WriteContentToSingleOutput(string templateFullPath, string extension)
	{
		string templateDirectoryName = Path.GetDirectoryName(templateFullPath);
		string contentDir = "Out";
		string directoryName = Path.Combine(templateDirectoryName, contentDir);
		string contentFileName = System.IO.Path.GetFileNameWithoutExtension(templateFullPath) + extension;
		System.IO.DirectoryInfo absRootDirInfo = new System.IO.DirectoryInfo(templateDirectoryName);
		absRootDirInfo = absRootDirInfo.Parent;
		string abstractionName = absRootDirInfo.Name;
		directoryName = directoryName.Replace(abstractionName, "AbstractionContent");
		string contentFullName = Path.Combine(directoryName, contentFileName);
		string contentData = this.GenerationEnvironment.ToString();
		this.GenerationEnvironment.Clear();
		File.WriteAllText(contentFullName, contentData);
	}

	T LoadXml<T>(string xmlFileName) {
		using(FileStream fStream = File.OpenRead(xmlFileName)) {
			XmlSerializer serializer = new XmlSerializer(typeof(T));
			T result = (T) serializer.Deserialize(fStream);
			fStream.Close();
			return result;
		}
	}

	void BeginNamespace(string namespaceName) {
		
        
        #line default
        #line hidden
        
        #line 109 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
this.Write("namespace ");

        
        #line default
        #line hidden
        
        #line 109 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(namespaceName));

        
        #line default
        #line hidden
        
        #line 109 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
this.Write(" { \r\n\t\t");

        
        #line default
        #line hidden
        
        #line 110 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
 
	}

	void EndBlock() {
		
        
        #line default
        #line hidden
        
        #line 114 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"
this.Write(" } ");

        
        #line default
        #line hidden
        
        #line 114 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude"

	}

		
	static string RemoveScands(string sourceString) {
		return sourceString.Replace('ä', 'a').Replace('Ä', 'A').Replace('å', 'a').Replace('Å', 'A').Replace('ö', 'o').Replace('Ö', 'O');
	}
	
	public class GenerationItem
	{
		public string FileName;
		public string Content;
	}
	

        
        #line default
        #line hidden
        
        #line 1 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\..\..\abscommon\CommonInclude\Common\AbstractionOptions_namespace.ttinclude"

public class AbstractionOptions { 
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/AbstractionOptions.xsd")]
[System.Xml.Serialization.XmlRootAttribute("AbstractionOptions", Namespace="http://tempuri.org/AbstractionOptions.xsd", IsNullable=false)]
public partial class AbstractionOptionsType {
    
    private GeneralType generalField;
    
    /// <remarks/>
    public GeneralType General {
        get {
            return this.generalField;
        }
        set {
            this.generalField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/AbstractionOptions.xsd")]
public partial class GeneralType {
    
    private GeneralTypeShareLevel shareLevelField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public GeneralTypeShareLevel shareLevel {
        get {
            return this.shareLevelField;
        }
        set {
            this.shareLevelField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/AbstractionOptions.xsd")]
public enum GeneralTypeShareLevel {
    
    /// <remarks/>
    Local,
    
    /// <remarks/>
    Shared,
    
    /// <remarks/>
    Modular,
}
} 
        
        #line default
        #line hidden
        
        #line 1 "D:\UserData\Kalle\work\abs\TheBallPlatform\Abstractions\OperationABS\Operation\Operation_v1_0.ttinclude"

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8669
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
[System.Xml.Serialization.XmlRootAttribute("OperationAbstraction", Namespace="http://tempuri.org/Operation_v1_0.xsd", IsNullable=false)]
public partial class OperationAbstractionType {
    
    private OperationsType[] operationsField;
    
    private DraftsType[] draftsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Operations")]
    public OperationsType[] Operations {
        get {
            return this.operationsField;
        }
        set {
            this.operationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Drafts")]
    public DraftsType[] Drafts {
        get {
            return this.draftsField;
        }
        set {
            this.draftsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationsType {
    
    private OperationType[] operationField;
    
    private string codeNamespaceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Operation")]
    public OperationType[] Operation {
        get {
            return this.operationField;
        }
        set {
            this.operationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string codeNamespace {
        get {
            return this.codeNamespaceField;
        }
        set {
            this.codeNamespaceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationType {
    
    private OperationSpecType operationSpecField;
    
    private OperationSignatureType operationSignatureField;
    
    private ParametersType parametersField;
    
    private ExecutionType executionField;
    
    private OperationReturnValuesType operationReturnValuesField;
    
    private string nameField;
    
    private bool isRootOperationField;
    
    public OperationType() {
        this.isRootOperationField = false;
    }
    
    /// <remarks/>
    public OperationSpecType OperationSpec {
        get {
            return this.operationSpecField;
        }
        set {
            this.operationSpecField = value;
        }
    }
    
    /// <remarks/>
    public OperationSignatureType OperationSignature {
        get {
            return this.operationSignatureField;
        }
        set {
            this.operationSignatureField = value;
        }
    }
    
    /// <remarks/>
    public ParametersType Parameters {
        get {
            return this.parametersField;
        }
        set {
            this.parametersField = value;
        }
    }
    
    /// <remarks/>
    public ExecutionType Execution {
        get {
            return this.executionField;
        }
        set {
            this.executionField = value;
        }
    }
    
    /// <remarks/>
    public OperationReturnValuesType OperationReturnValues {
        get {
            return this.operationReturnValuesField;
        }
        set {
            this.operationReturnValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isRootOperation {
        get {
            return this.isRootOperationField;
        }
        set {
            this.isRootOperationField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationSpecType {
    
    private UseCaseType[] useCasesField;
    
    private RequirementType[] requirementsField;
    
    private string descriptionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("UseCase", IsNullable=false)]
    public UseCaseType[] UseCases {
        get {
            return this.useCasesField;
        }
        set {
            this.useCasesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Requirement", IsNullable=false)]
    public RequirementType[] Requirements {
        get {
            return this.requirementsField;
        }
        set {
            this.requirementsField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class UseCaseType {
    
    private string nameField;
    
    private string locationUrlField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string locationUrl {
        get {
            return this.locationUrlField;
        }
        set {
            this.locationUrlField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ElseType {
    
    private object[] draftExecutionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftMethodCall", typeof(DraftMethodCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftOperationCall", typeof(DraftOperationCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("ForLoop", typeof(ForLoopType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("IfCondition", typeof(IfConditionType), IsNullable=false)]
    public object[] DraftExecution {
        get {
            return this.draftExecutionField;
        }
        set {
            this.draftExecutionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DraftMethodCallType {
    
    private string nameOfMethodField;
    
    private string designDescField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string nameOfMethod {
        get {
            return this.nameOfMethodField;
        }
        set {
            this.nameOfMethodField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DraftOperationCallType {
    
    private string nameOfOperationField;
    
    private string designDescField;
    
    private string packageNamespaceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string nameOfOperation {
        get {
            return this.nameOfOperationField;
        }
        set {
            this.nameOfOperationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string packageNamespace {
        get {
            return this.packageNamespaceField;
        }
        set {
            this.packageNamespaceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ForLoopType {
    
    private object[] draftExecutionField;
    
    private string nameField;
    
    private string designDescField;
    
    private bool isParallelizableField;
    
    public ForLoopType() {
        this.isParallelizableField = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftMethodCall", typeof(DraftMethodCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftOperationCall", typeof(DraftOperationCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("ForLoop", typeof(ForLoopType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("IfCondition", typeof(IfConditionType), IsNullable=false)]
    public object[] DraftExecution {
        get {
            return this.draftExecutionField;
        }
        set {
            this.draftExecutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isParallelizable {
        get {
            return this.isParallelizableField;
        }
        set {
            this.isParallelizableField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class IfConditionType {
    
    private object[] draftExecutionField;
    
    private ElseIfType[] elseIfField;
    
    private ElseType elseField;
    
    private string nameField;
    
    private string designDescField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftMethodCall", typeof(DraftMethodCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftOperationCall", typeof(DraftOperationCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("ForLoop", typeof(ForLoopType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("IfCondition", typeof(IfConditionType), IsNullable=false)]
    public object[] DraftExecution {
        get {
            return this.draftExecutionField;
        }
        set {
            this.draftExecutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ElseIf")]
    public ElseIfType[] ElseIf {
        get {
            return this.elseIfField;
        }
        set {
            this.elseIfField = value;
        }
    }
    
    /// <remarks/>
    public ElseType Else {
        get {
            return this.elseField;
        }
        set {
            this.elseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ElseIfType {
    
    private object[] draftExecutionField;
    
    private string nameField;
    
    private string designDescField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftMethodCall", typeof(DraftMethodCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftOperationCall", typeof(DraftOperationCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("ForLoop", typeof(ForLoopType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("IfCondition", typeof(IfConditionType), IsNullable=false)]
    public object[] DraftExecution {
        get {
            return this.draftExecutionField;
        }
        set {
            this.draftExecutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DraftParameterType {
    
    private string nameField;
    
    private string dataTypeField;
    
    private string designDescField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string dataType {
        get {
            return this.dataTypeField;
        }
        set {
            this.dataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DraftOperationType {
    
    private DraftParameterType[] draftParametersField;
    
    private object[] draftExecutionField;
    
    private string nameField;
    
    private string designDescField;
    
    private string returnValueDataTypeField;
    
    private decimal workEstimateInDaysField;
    
    private bool workEstimateInDaysFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftParameter", IsNullable=false)]
    public DraftParameterType[] DraftParameters {
        get {
            return this.draftParametersField;
        }
        set {
            this.draftParametersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftMethodCall", typeof(DraftMethodCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("DraftOperationCall", typeof(DraftOperationCallType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("ForLoop", typeof(ForLoopType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("IfCondition", typeof(IfConditionType), IsNullable=false)]
    public object[] DraftExecution {
        get {
            return this.draftExecutionField;
        }
        set {
            this.draftExecutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string returnValueDataType {
        get {
            return this.returnValueDataTypeField;
        }
        set {
            this.returnValueDataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal workEstimateInDays {
        get {
            return this.workEstimateInDaysField;
        }
        set {
            this.workEstimateInDaysField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool workEstimateInDaysSpecified {
        get {
            return this.workEstimateInDaysFieldSpecified;
        }
        set {
            this.workEstimateInDaysFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class DraftsType {
    
    private DraftOperationType[] draftOperationField;
    
    private string packageNamespaceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DraftOperation")]
    public DraftOperationType[] DraftOperation {
        get {
            return this.draftOperationField;
        }
        set {
            this.draftOperationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string packageNamespace {
        get {
            return this.packageNamespaceField;
        }
        set {
            this.packageNamespaceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationReturnValuesType {
    
    private VariableType[] returnValueField;
    
    private TargetType[] parameterField;
    
    private TargetType[] targetField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReturnValue")]
    public VariableType[] ReturnValue {
        get {
            return this.returnValueField;
        }
        set {
            this.returnValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public TargetType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class VariableType {
    
    private string nameField;
    
    private string dataTypeField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string dataType {
        get {
            return this.dataTypeField;
        }
        set {
            this.dataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public enum VariableTypeState {
    
    /// <remarks/>
    underDesign,
    
    /// <remarks/>
    designApproved,
    
    /// <remarks/>
    implemented,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class TargetType {
    
    private string nameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class TargetDefinitionType {
    
    private TargetType[] parameterField;
    
    private TargetType[] targetField;
    
    private string nameField;
    
    private MethodExecuteTypeAsyncSupportMode asyncSupportModeField;
    
    private string dataTypeField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    public TargetDefinitionType() {
        this.asyncSupportModeField = MethodExecuteTypeAsyncSupportMode.SyncOnly;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public TargetType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(MethodExecuteTypeAsyncSupportMode.SyncOnly)]
    public MethodExecuteTypeAsyncSupportMode asyncSupportMode {
        get {
            return this.asyncSupportModeField;
        }
        set {
            this.asyncSupportModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string dataType {
        get {
            return this.dataTypeField;
        }
        set {
            this.dataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public enum MethodExecuteTypeAsyncSupportMode {
    
    /// <remarks/>
    SyncOnly,
    
    /// <remarks/>
    AsyncOnly,
    
    /// <remarks/>
    Both,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationExecuteType {
    
    private OperationSignatureType operationSignatureField;
    
    private TargetType[] parameterField;
    
    private TargetType[] targetField;
    
    private VariableType[] returnValueField;
    
    private string nameField;
    
    private MethodExecuteTypeAsyncSupportMode asyncSupportModeField;
    
    private string targetOperationNameField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    public OperationExecuteType() {
        this.asyncSupportModeField = MethodExecuteTypeAsyncSupportMode.SyncOnly;
    }
    
    /// <remarks/>
    public OperationSignatureType OperationSignature {
        get {
            return this.operationSignatureField;
        }
        set {
            this.operationSignatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public TargetType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReturnValue")]
    public VariableType[] ReturnValue {
        get {
            return this.returnValueField;
        }
        set {
            this.returnValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(MethodExecuteTypeAsyncSupportMode.SyncOnly)]
    public MethodExecuteTypeAsyncSupportMode asyncSupportMode {
        get {
            return this.asyncSupportModeField;
        }
        set {
            this.asyncSupportModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string targetOperationName {
        get {
            return this.targetOperationNameField;
        }
        set {
            this.targetOperationNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class OperationSignatureType {
    
    private LogicalInformationType[] parameterField;
    
    private LogicalInformationType returnValueField;
    
    private string nameField;
    
    private string logicalNamespaceField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public LogicalInformationType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    public LogicalInformationType ReturnValue {
        get {
            return this.returnValueField;
        }
        set {
            this.returnValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string logicalNamespace {
        get {
            return this.logicalNamespaceField;
        }
        set {
            this.logicalNamespaceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class LogicalInformationType {
    
    private string nameField;
    
    private string logicalNamespaceField;
    
    private string logicalDatatypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string logicalNamespace {
        get {
            return this.logicalNamespaceField;
        }
        set {
            this.logicalNamespaceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string logicalDatatype {
        get {
            return this.logicalDatatypeField;
        }
        set {
            this.logicalDatatypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class MethodExecuteType {
    
    private TargetType[] parameterField;
    
    private TargetType[] targetField;
    
    private VariableType[] returnValueField;
    
    private string nameField;
    
    private MethodExecuteTypeAsyncSupportMode asyncSupportModeField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    public MethodExecuteType() {
        this.asyncSupportModeField = MethodExecuteTypeAsyncSupportMode.SyncOnly;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public TargetType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReturnValue")]
    public VariableType[] ReturnValue {
        get {
            return this.returnValueField;
        }
        set {
            this.returnValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(MethodExecuteTypeAsyncSupportMode.SyncOnly)]
    public MethodExecuteTypeAsyncSupportMode asyncSupportMode {
        get {
            return this.asyncSupportModeField;
        }
        set {
            this.asyncSupportModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ExecutionType {
    
    private object[] sequentialExecutionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MethodExecute", typeof(MethodExecuteType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("OperationExecute", typeof(OperationExecuteType), IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("TargetDefinition", typeof(TargetDefinitionType), IsNullable=false)]
    public object[] SequentialExecution {
        get {
            return this.sequentialExecutionField;
        }
        set {
            this.sequentialExecutionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ModificationType {
    
    private TargetType[] targetField;
    
    private string nameField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ValidationType {
    
    private TargetType[] targetField;
    
    private string nameField;
    
    private string designDescField;
    
    private VariableTypeState stateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Target")]
    public TargetType[] Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string designDesc {
        get {
            return this.designDescField;
        }
        set {
            this.designDescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public VariableTypeState state {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class ParametersType {
    
    private VariableType[] parameterField;
    
    private object[] itemsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public VariableType[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Modification", typeof(ModificationType))]
    [System.Xml.Serialization.XmlElementAttribute("Validation", typeof(ValidationType))]
    public object[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class RequirementType {
    
    private object itemField;
    
    private string nameField;
    
    private RequirementTypeCategory categoryField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FreeformText", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("Performance", typeof(RequirementTypePerformance))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public RequirementTypeCategory category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public partial class RequirementTypePerformance {
    
    private long maxMemoryBytesField;
    
    private bool maxMemoryBytesFieldSpecified;
    
    private decimal maxCPUTimeMsField;
    
    private bool maxCPUTimeMsFieldSpecified;
    
    private decimal maxTotalTimeMsField;
    
    private bool maxTotalTimeMsFieldSpecified;
    
    private long maxFileIOCountField;
    
    private bool maxFileIOCountFieldSpecified;
    
    private long maxFileIOBytesField;
    
    private bool maxFileIOBytesFieldSpecified;
    
    private decimal maxFileIOTimeMsField;
    
    private bool maxFileIOTimeMsFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long maxMemoryBytes {
        get {
            return this.maxMemoryBytesField;
        }
        set {
            this.maxMemoryBytesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxMemoryBytesSpecified {
        get {
            return this.maxMemoryBytesFieldSpecified;
        }
        set {
            this.maxMemoryBytesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal maxCPUTimeMs {
        get {
            return this.maxCPUTimeMsField;
        }
        set {
            this.maxCPUTimeMsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxCPUTimeMsSpecified {
        get {
            return this.maxCPUTimeMsFieldSpecified;
        }
        set {
            this.maxCPUTimeMsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal maxTotalTimeMs {
        get {
            return this.maxTotalTimeMsField;
        }
        set {
            this.maxTotalTimeMsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxTotalTimeMsSpecified {
        get {
            return this.maxTotalTimeMsFieldSpecified;
        }
        set {
            this.maxTotalTimeMsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long maxFileIOCount {
        get {
            return this.maxFileIOCountField;
        }
        set {
            this.maxFileIOCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxFileIOCountSpecified {
        get {
            return this.maxFileIOCountFieldSpecified;
        }
        set {
            this.maxFileIOCountFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long maxFileIOBytes {
        get {
            return this.maxFileIOBytesField;
        }
        set {
            this.maxFileIOBytesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxFileIOBytesSpecified {
        get {
            return this.maxFileIOBytesFieldSpecified;
        }
        set {
            this.maxFileIOBytesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public decimal maxFileIOTimeMs {
        get {
            return this.maxFileIOTimeMsField;
        }
        set {
            this.maxFileIOTimeMsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxFileIOTimeMsSpecified {
        get {
            return this.maxFileIOTimeMsFieldSpecified;
        }
        set {
            this.maxFileIOTimeMsFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/Operation_v1_0.xsd")]
public enum RequirementTypeCategory {
    
    /// <remarks/>
    Customer,
    
    /// <remarks/>
    Architectural,
    
    /// <remarks/>
    Structural,
    
    /// <remarks/>
    Behavioral,
    
    /// <remarks/>
    Functional,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Non-functional")]
    Nonfunctional,
    
    /// <remarks/>
    Performance,
    
    /// <remarks/>
    Design,
    
    /// <remarks/>
    Derived,
    
    /// <remarks/>
    Allocated,
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class CSharpCode_v1_0Base
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
